# Global configurations
global:
  env:
    production: false  # Set the environment to production (true) or development (false)
# Default values for ever-teams.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ever-co/ever-teams-webapp-dev
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

envs:
  - name: NEXT_PUBLIC_COOKIE_DOMAINS
    value: ""
  - name: POSTMARK_SERVER_API_TOKEN
    value: ""
  - name: NEXT_PUBLIC_GA_MEASUREMENT_ID
    value: ""

# Gauzy Configuration
gauzy:
  # Gauzy API Server URL
  gauzyApiServerUrl: ""
  # Next Public Gauzy API Server URL
  nextPublicGauzyApiServerUrl: ""

# Sentry Configuration
sentry:
  # Sentry DNS for Next Public
  nextPublicSentryDns: ""
  # Sentry DSN
  sentryDsn: ""
  # Sentry Authentication Token
  sentryAuthToken: ""
  # Sentry Project
  sentryProject: ""
  # Sentry Debug Mode
  sentryDebug: ""
  # Sentry Organization
  sentryOrg: ""

# Jitsu Configuration
jitsu:
  # Jitsu Browser Write Key for Next Public
  nextPublicJitsuBrowserWriteKey: ""
  # Jitsu Browser URL for Next Public
  nextPublicJitsuBrowserUrl: ""
  # Jitsu Server Write Key
  jitsuServerWriteKey: ""
  # Jitsu Server URL
  jitsuServerUrl: ""

# Mailchimp Configuration
mailchimp:
  # Mailchimp List ID
  mailchimpListId: ""
  # Mailchimp API Key
  mailchimpApiKey: ""

# SMTP Configuration
smtp:
  # SMTP From Address
  smtpFromAddress: ""
  # SMTP Host
  smtpHost: ""
  # SMTP Secure Connection
  smtpSecure: ""
  # SMTP Username
  smtpUsername: ""
  # SMTP Password
  smtpPassword: ""

# Board Configuration
board:
  # Board Firebase Configuration for Next Public
  nextPublicBoardFirebaseConfig: ""
  # Board Backend Post URL for Next Public
  nextPublicBoardBackendPostUrl: ""
  # Board Application Domain for Next Public
  nextPublicBoardAppDomain: ""

# Meet Configuration
meet:
  # Meet JWT Application Secret
  meetJwtAppSecret: ""
  # Meet JWT Application ID
  meetJwtAppId: ""
  # Next Public Meet Domain
  nextPublicMeetDomain: ""

# Chatwoot Configuration
chatwoot:
  # Next Public Chatwoot API Key
  nextPublicChatwootApiKey: ""

# Captcha Configuration
captcha:
  # Captcha Secret Key
  captchaSecretKey: ""
  # Next Public Captcha Site Key
  nextPublicCaptchaSiteKey: ""


podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
